services:
  db:
    container_name: ${DB_CONTAINER_NAME:-nips-db}
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - postgres_hsh_data:/var/lib/postgresql/data
    networks:
      - hsh-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  bot:
    container_name: ${BOT_CONTAINER_NAME:-nips-bot}
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DISCORD_GUILD_ID=${DISCORD_GUILD_ID}
    volumes:
      - ./src:/app/src
      - node_modules_hsh_data:/app/node_modules
    env_file:
      - .env
    networks:
      - hsh-network
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

networks:
  hsh-network:
    driver: bridge

volumes:
  postgres_hsh_data:
  node_modules_hsh_data: