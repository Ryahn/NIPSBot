services:
  db:
    container_name: nips-db
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: nips
    ports:
      - 5532:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nips-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  bot:
    container_name: nips-bot
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DISCORD_GUILD_ID=${DISCORD_GUILD_ID}
    volumes:
      - ./src:/app/src
      - node_modules:/app/node_modules
    env_file:
      - .env
    networks:
      - nips-network
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

networks:
  nips-network:
    driver: bridge

volumes:
  postgres_data:
  node_modules: